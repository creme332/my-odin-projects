(()=>{"use strict";var n={184:(n,e,r)=>{r.d(e,{Z:()=>i});var t=r(537),o=r.n(t),a=r(645),A=r.n(a)()(o());A.push([n.id,":root{\n    --loader-color:black;\n    --loader-border-size:3px;\n    --loader-radius:15px;\n}\n\n.loader {\n  border: var(--loader-border-size) solid #c4c4c4;\n  border-top: var(--loader-border-size) solid var(--loader-color);\n  border-right: var(--loader-border-size) solid var(--loader-color);\n\n  border-radius: 50%;\n  width: var(--loader-radius);\n  height: var(--loader-radius);\n  animation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.invalid-loader{\n  border-top-color: red;\n  border-right-color: red;\n}\n","",{version:3,sources:["webpack://./src/styles/loader.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,wBAAwB;IACxB,oBAAoB;AACxB;;AAEA;EACE,+CAA+C;EAC/C,+DAA+D;EAC/D,iEAAiE;;EAEjE,kBAAkB;EAClB,2BAA2B;EAC3B,4BAA4B;EAC5B,uCAAuC;AACzC;;AAEA;EACE;IACE,uBAAuB;EACzB;EACA;IACE,yBAAyB;EAC3B;AACF;;AAEA;EACE,qBAAqB;EACrB,uBAAuB;AACzB",sourcesContent:[":root{\n    --loader-color:black;\n    --loader-border-size:3px;\n    --loader-radius:15px;\n}\n\n.loader {\n  border: var(--loader-border-size) solid #c4c4c4;\n  border-top: var(--loader-border-size) solid var(--loader-color);\n  border-right: var(--loader-border-size) solid var(--loader-color);\n\n  border-radius: 50%;\n  width: var(--loader-radius);\n  height: var(--loader-radius);\n  animation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.invalid-loader{\n  border-top-color: red;\n  border-right-color: red;\n}\n"],sourceRoot:""}]);const i=A},66:(n,e,r)=>{r.d(e,{Z:()=>i});var t=r(537),o=r.n(t),a=r(645),A=r.n(a)()(o());A.push([n.id,':root {\n  --progress-bar-bgcol: #f2f2f2;\n  --progress-bar1-col: #5a9bfe;\n  --progress-bar2-col: #ff9f24;\n  --progress-bar3-col: #f4694c;\n}\n\n.progress-bar {\n  padding: 10px 0;\n  height: 120px;\n  width: 40px;\n  border-radius: 20px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background-color: var(--progress-bar-bgcol);\n}\n\n.progress-bar input[type="radio"] {\n  appearance: none;\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n}\n\n.progress-bar input:nth-child(1):checked {\n  background-color: var(--progress-bar1-col);\n}\n.progress-bar input:nth-child(2):checked {\n  background-color: var(--progress-bar2-col);\n}\n.progress-bar input:nth-child(3):checked {\n  background-color: var(--progress-bar3-col);\n}\n',"",{version:3,sources:["webpack://./src/styles/progressbar.css"],names:[],mappings:"AAAA;EACE,6BAA6B;EAC7B,4BAA4B;EAC5B,4BAA4B;EAC5B,4BAA4B;AAC9B;;AAEA;EACE,eAAe;EACf,aAAa;EACb,WAAW;EACX,mBAAmB;;EAEnB,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;EACnB,2CAA2C;AAC7C;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,0CAA0C;AAC5C;AACA;EACE,0CAA0C;AAC5C;AACA;EACE,0CAA0C;AAC5C",sourcesContent:[':root {\n  --progress-bar-bgcol: #f2f2f2;\n  --progress-bar1-col: #5a9bfe;\n  --progress-bar2-col: #ff9f24;\n  --progress-bar3-col: #f4694c;\n}\n\n.progress-bar {\n  padding: 10px 0;\n  height: 120px;\n  width: 40px;\n  border-radius: 20px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background-color: var(--progress-bar-bgcol);\n}\n\n.progress-bar input[type="radio"] {\n  appearance: none;\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n}\n\n.progress-bar input:nth-child(1):checked {\n  background-color: var(--progress-bar1-col);\n}\n.progress-bar input:nth-child(2):checked {\n  background-color: var(--progress-bar2-col);\n}\n.progress-bar input:nth-child(3):checked {\n  background-color: var(--progress-bar3-col);\n}\n'],sourceRoot:""}]);const i=A},434:(n,e,r)=>{r.d(e,{Z:()=>i});var t=r(537),o=r.n(t),a=r(645),A=r.n(a)()(o());A.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\ninput, input:active{\n\tborder:0;\n\toutline: 0;\n\tbackground-color: transparent;\n}","",{version:3,sources:["webpack://./src/styles/reset.css"],names:[],mappings:"AAAA;;;CAGC;AACD;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;AACA;CACC,QAAQ;CACR,UAAU;CACV,6BAA6B;AAC9B",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\ninput, input:active{\n\tborder:0;\n\toutline: 0;\n\tbackground-color: transparent;\n}"],sourceRoot:""}]);const i=A},479:(n,e,r)=>{r.d(e,{Z:()=>i});var t=r(537),o=r.n(t),a=r(645),A=r.n(a)()(o());A.push([n.id,":root {\n  --speedometer-low-bar: green;\n  --speedometer-middle-bar: orange;\n  --speedometer-high-bar: red;\n  --speedometer-radius: 360px;\n  --speedometer-rotation-angle: 150deg;\n}\n@media only screen and (min-width: 761px) {\n  .layout-align {\n    /* width: 50%; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /* margin: 30px 0 30px 0; */\n  }\n}\n@media only screen and (max-width: 760px) {\n  .layout-align {\n    width: 100%;\n    display: flex;\n    /* align-items: center; */\n    justify-content: center;\n    /* margin: 15px 0 15px 0; */\n    transform: scale(0.8);\n  }\n}\n/* Just for very small screen sizes */\n@media only screen and (max-width: 355px) {\n  .layout-align {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 10px 0 10px 0;\n    transform: scale(0.8);\n  }\n}\n/* CSS for 1st Meter */\n.layout-align {\n  /* outline: 3px solid; */\n}\n#score-meter-1 {\n  width: 300px;\n  height: 150px;\n  border-top-left-radius: var(--speedometer-radius);\n  border-top-right-radius: var(--speedometer-radius);\n  overflow: hidden;\n  position: relative;\n}\n#scorer-1-inner-div {\n  position: absolute;\n  left: 20%;\n  top: 40%;\n  width: 60%;\n  height: 60%;\n  border-top-left-radius: var(--speedometer-radius);\n  border-top-right-radius: var(--speedometer-radius);\n  background-color: #ffffff;\n  z-index: 2;\n}\n#scorer-1-inner-div-2 {\n  position: absolute;\n  left: 0%;\n  top: 0%;\n  z-index: 4;\n  width: 100%;\n  height: 100%;\n  border-top-left-radius: var(--speedometer-radius);\n  border-top-right-radius: var(--speedometer-radius);\n  background-color: var(--speedometer-low-bar);\n  transform-origin: bottom center;\n  transform: rotate(-130deg);\n  z-index: 0;\n}\n#scorer-1-inner-div-3 {\n  position: absolute;\n  right: 0%;\n  top: 0%;\n  z-index: 4;\n  width: 100%;\n  height: 100%;\n  border-top-left-radius: var(--speedometer-radius);\n  border-top-right-radius: var(--speedometer-radius);\n  background-color: var(--speedometer-high-bar);\n  transform-origin: bottom center;\n  transform: rotate(130deg);\n  z-index: 0;\n}\n#scorer-1-inner-div-4 {\n  position: absolute;\n  left: 50px;\n  top: -2px;\n  width: 0;\n  height: 0;\n  border-left: 100px solid transparent;\n  border-right: 100px solid transparent;\n  border-bottom: 140px solid var(--speedometer-middle-bar);\n  transform: rotate(180deg);\n}\n.scorer-1-tick {\n  position: absolute;\n  top: 40%;\n  left: -250%;\n  width: 300%;\n  height: 5px;\n  background-color: #000000;\n  animation-duration: 2s;\n  animation-timing-function: ease-out;\n  transform-origin: right center;\n  border-top-left-radius: 50%;\n  border-bottom-left-radius: 50%;\n  border-top-right-radius: 5%;\n  border-bottom-right-radius: 5%;\n}\n#scorer-1-inner-div-5 {\n  position: absolute;\n  left: 45%;\n  top: 80%;\n  width: 10%;\n  height: 20%;\n  border-radius: 50%;\n  background-color: #000000;\n  z-index: 2;\n}\n\n.play-speedometer-animation {\n  animation-name: ticker-mover-1;\n}\n@keyframes ticker-mover-1 {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(var(--speedometer-rotation-angle));\n  }\n}\n\n.speedometer {\n  display: flex;\n  flex-direction: column;\n  gap: 0.3em;\n}\n.speedometer * {\n  /* outline: 1px solid; */\n}\n.speedometer #speedometer-value {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n.speedometer #speedometer-value .number {\n  font-size: 30px;\n}\n","",{version:3,sources:["webpack://./src/styles/speedometer.css"],names:[],mappings:"AAAA;EACE,4BAA4B;EAC5B,gCAAgC;EAChC,2BAA2B;EAC3B,2BAA2B;EAC3B,oCAAoC;AACtC;AACA;EACE;IACE,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,2BAA2B;EAC7B;AACF;AACA;EACE;IACE,WAAW;IACX,aAAa;IACb,yBAAyB;IACzB,uBAAuB;IACvB,2BAA2B;IAC3B,qBAAqB;EACvB;AACF;AACA,qCAAqC;AACrC;EACE;IACE,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,qBAAqB;IACrB,qBAAqB;EACvB;AACF;AACA,sBAAsB;AACtB;EACE,wBAAwB;AAC1B;AACA;EACE,YAAY;EACZ,aAAa;EACb,iDAAiD;EACjD,kDAAkD;EAClD,gBAAgB;EAChB,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,UAAU;EACV,WAAW;EACX,iDAAiD;EACjD,kDAAkD;EAClD,yBAAyB;EACzB,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,QAAQ;EACR,OAAO;EACP,UAAU;EACV,WAAW;EACX,YAAY;EACZ,iDAAiD;EACjD,kDAAkD;EAClD,4CAA4C;EAC5C,+BAA+B;EAC/B,0BAA0B;EAC1B,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,OAAO;EACP,UAAU;EACV,WAAW;EACX,YAAY;EACZ,iDAAiD;EACjD,kDAAkD;EAClD,6CAA6C;EAC7C,+BAA+B;EAC/B,yBAAyB;EACzB,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,SAAS;EACT,QAAQ;EACR,SAAS;EACT,oCAAoC;EACpC,qCAAqC;EACrC,wDAAwD;EACxD,yBAAyB;AAC3B;AACA;EACE,kBAAkB;EAClB,QAAQ;EACR,WAAW;EACX,WAAW;EACX,WAAW;EACX,yBAAyB;EACzB,sBAAsB;EACtB,mCAAmC;EACnC,8BAA8B;EAC9B,2BAA2B;EAC3B,8BAA8B;EAC9B,2BAA2B;EAC3B,8BAA8B;AAChC;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,UAAU;EACV,WAAW;EACX,kBAAkB;EAClB,yBAAyB;EACzB,UAAU;AACZ;;AAEA;EACE,8BAA8B;AAChC;AACA;EACE;IACE,uBAAuB;EACzB;EACA;IACE,oDAAoD;EACtD;AACF;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,UAAU;AACZ;AACA;EACE,wBAAwB;AAC1B;AACA;EACE,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,mBAAmB;AACrB;AACA;EACE,eAAe;AACjB",sourcesContent:[":root {\n  --speedometer-low-bar: green;\n  --speedometer-middle-bar: orange;\n  --speedometer-high-bar: red;\n  --speedometer-radius: 360px;\n  --speedometer-rotation-angle: 150deg;\n}\n@media only screen and (min-width: 761px) {\n  .layout-align {\n    /* width: 50%; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /* margin: 30px 0 30px 0; */\n  }\n}\n@media only screen and (max-width: 760px) {\n  .layout-align {\n    width: 100%;\n    display: flex;\n    /* align-items: center; */\n    justify-content: center;\n    /* margin: 15px 0 15px 0; */\n    transform: scale(0.8);\n  }\n}\n/* Just for very small screen sizes */\n@media only screen and (max-width: 355px) {\n  .layout-align {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 10px 0 10px 0;\n    transform: scale(0.8);\n  }\n}\n/* CSS for 1st Meter */\n.layout-align {\n  /* outline: 3px solid; */\n}\n#score-meter-1 {\n  width: 300px;\n  height: 150px;\n  border-top-left-radius: var(--speedometer-radius);\n  border-top-right-radius: var(--speedometer-radius);\n  overflow: hidden;\n  position: relative;\n}\n#scorer-1-inner-div {\n  position: absolute;\n  left: 20%;\n  top: 40%;\n  width: 60%;\n  height: 60%;\n  border-top-left-radius: var(--speedometer-radius);\n  border-top-right-radius: var(--speedometer-radius);\n  background-color: #ffffff;\n  z-index: 2;\n}\n#scorer-1-inner-div-2 {\n  position: absolute;\n  left: 0%;\n  top: 0%;\n  z-index: 4;\n  width: 100%;\n  height: 100%;\n  border-top-left-radius: var(--speedometer-radius);\n  border-top-right-radius: var(--speedometer-radius);\n  background-color: var(--speedometer-low-bar);\n  transform-origin: bottom center;\n  transform: rotate(-130deg);\n  z-index: 0;\n}\n#scorer-1-inner-div-3 {\n  position: absolute;\n  right: 0%;\n  top: 0%;\n  z-index: 4;\n  width: 100%;\n  height: 100%;\n  border-top-left-radius: var(--speedometer-radius);\n  border-top-right-radius: var(--speedometer-radius);\n  background-color: var(--speedometer-high-bar);\n  transform-origin: bottom center;\n  transform: rotate(130deg);\n  z-index: 0;\n}\n#scorer-1-inner-div-4 {\n  position: absolute;\n  left: 50px;\n  top: -2px;\n  width: 0;\n  height: 0;\n  border-left: 100px solid transparent;\n  border-right: 100px solid transparent;\n  border-bottom: 140px solid var(--speedometer-middle-bar);\n  transform: rotate(180deg);\n}\n.scorer-1-tick {\n  position: absolute;\n  top: 40%;\n  left: -250%;\n  width: 300%;\n  height: 5px;\n  background-color: #000000;\n  animation-duration: 2s;\n  animation-timing-function: ease-out;\n  transform-origin: right center;\n  border-top-left-radius: 50%;\n  border-bottom-left-radius: 50%;\n  border-top-right-radius: 5%;\n  border-bottom-right-radius: 5%;\n}\n#scorer-1-inner-div-5 {\n  position: absolute;\n  left: 45%;\n  top: 80%;\n  width: 10%;\n  height: 20%;\n  border-radius: 50%;\n  background-color: #000000;\n  z-index: 2;\n}\n\n.play-speedometer-animation {\n  animation-name: ticker-mover-1;\n}\n@keyframes ticker-mover-1 {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(var(--speedometer-rotation-angle));\n  }\n}\n\n.speedometer {\n  display: flex;\n  flex-direction: column;\n  gap: 0.3em;\n}\n.speedometer * {\n  /* outline: 1px solid; */\n}\n.speedometer #speedometer-value {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n.speedometer #speedometer-value .number {\n  font-size: 30px;\n}\n"],sourceRoot:""}]);const i=A},772:(n,e,r)=>{r.d(e,{Z:()=>i});var t=r(537),o=r.n(t),a=r(645),A=r.n(a)()(o());A.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@600&display=swap);"]),A.push([n.id,':root {\n  --bg-gray: #fafafa;\n  --time-gray: #8a8a8a;\n  --card-large-font-size: 60px;\n}\n\n* {\n  box-sizing: border-box !important;\n  /* outline: 1px solid red; */\n}\n\nbody {\n  overflow: scroll;\n  display: grid;\n  height: 100vh;\n  width: 100vw;\n\n  padding: 0em 1em 0 0;\n\n  font-family: "Source Sans Pro", sans-serif;\n  grid-template-columns: 1fr 4fr;\n  grid-template-rows: 1fr 1.5fr 1.5fr;\n  grid-template-areas: "s a" "s b" "s c";\n  background-color: var(--bg-gray);\n  /* background-color: red; */\n  gap: 1em;\n}\n\n.hide {\n  visibility: hidden;\n}\n\n.sidebar {\n  grid-area: s;\n  background-color: white;\n  /* margin-right: 1em; */\n}\n\n.sidebar > div {\n  display: flex;\n  flex-direction: column;\n  gap: 1em;\n  padding: 20px;\n  position: sticky;\n  top: 0;\n}\n\n.sidebar .weather-icon {\n  flex: 1;\n}\n\n#uv-card {\n  gap: 1em;\n}\n\n.card {\n  display: flex;\n  flex-direction: column;\n  color: var(--time-gray);\n  font-size: 20px;\n  padding: 15px;\n  background-color: white;\n}\n\n.temperature {\n  display: flex;\n}\n.sidebar .number,\n.row2 .number,\n.row3 .number {\n  font-size: var(--card-large-font-size);\n}\n.sidebar .symbol,\n.row2 .symbol,\n.row3 .symbol {\n  font-size: 40px;\n}\n\n.card .number {\n  color: black;\n}\n.card .symbol {\n  color: var(--time-gray);\n}\n.date {\n  font-size: 20px;\n}\n.date .day {\n  font-weight: 600;\n}\n.date .time {\n  color: var(--time-gray);\n}\n\n.search-bar {\n  display: flex;\n  height: 30px;\n  background-color: var(--bg-gray);\n  border-radius: 16px;\n  padding: 10px;\n  gap: 1em;\n  align-items: center;\n}\n.search-bar input {\n  flex: 1;\n  font-size: 14px;\n}\n\n/* row 1 start */\n.row1 {\n  margin-top: 1em;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 2em;\n  grid-area: a;\n  background-color: blue;\n}\n.row1 .card {\n  max-height: 200px;\n  gap: 1em;\n}\n\n.row1 .stats {\n  gap: 0.1em;\n}\n.row1 .card-title {\n  text-align: center;\n  font-weight: 600;\n  color: black;\n}\n\n.row1 img {\n  width: 100%;\n  margin-right: auto;\n}\n.row1 .stats {\n  display: flex;\n  justify-content: center;\n}\n/* row 1 end */\n\n/* row 2 start */\n.row2 {\n  display: flex;\n  flex-direction: column;\n  gap: 2em;\n  grid-area: b;\n}\n\n.row2 h2 {\n  font-size: 30px;\n  font-weight: 600;\n}\n\n.row2 .card-container {\n  display: grid;\n  gap: 2em;\n  grid-template-columns: repeat(3, 1fr);\n\n  width: 100%;\n  height: 100%;\n}\n/* row 2 end */\n\n/* row 3 start */\n.row3 {\n  margin-bottom: 1em;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 2em;\n  grid-area: c;\n  background-color: yellow;\n}\n\n.row3 .stats-container {\n  flex: 1;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n/* row 3 end */\n.row1 .card-title,\n.row2 .card-title,\n.row3 .card-title {\n  font-size: 16px;\n}\n.row1,\n.row2,\n.row3 {\n  background-color: transparent;\n}\n\n.country-info {\n  position: relative;\n}\n\n.country-title {\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  color: white;\n  position: absolute;\n  z-index: 99;\n  top: 10px;\n}\n\n.country-title div {\n  display: flex;\n  gap: 0.5em;\n}\n\n.country-img {\n  border-radius: 10px;\n}\n\n.card .stats {\n  display: flex;\n  align-items: center;\n  gap: 0.5em;\n}\n\n#sun-card {\n  gap: 1.5em;\n}\n#sun-card .time {\n  font-size: 25px;\n  color: black;\n}\n#sun-card .container {\n  display: flex;\n  align-items: center;\n  gap: 1em;\n}\n\n#visibility-card .stats-container {\n  display: flex;\n  flex: 1;\n  justify-content: center;\n}\n\n#wind-card .stats-container {\n  height: 100%;\n  display: grid;\n  place-items: center;\n}\n\n.status {\n  font-weight: 500;\n  font-size: 16px;\n}\n.status.good::after {\n  content: " Good";\n  color: var(--progress-bar1-col);\n}\n.status.average::after {\n  content: " Average";\n  color: var(--progress-bar2-col);\n}\n.status.bad::after {\n  content: " Bad";\n  color: var(--progress-bar3-col);\n}\n\n@media screen and (max-width: 600px) {\n  :root {\n    --card-large-font-size: 50px;\n  }\n  body {\n    display: flex;\n    flex-direction: column;\n    height: auto;\n    padding: 0;\n    gap: 2em;\n    padding: 5px;\n  }\n\n  .row1,\n  .row2,\n  .row3 {\n    margin-right: 0;\n  }\n\n  #wind-card {\n    width: 100%;\n  }\n  .card {\n    box-sizing: border-box;\n    min-width: none;\n  }\n  .search-bar {\n    padding: 0;\n    border-radius: 12px;\n  }\n\n  .sidebar > div {\n    gap: 1em;\n    padding: 0;\n    position: relative;\n  }\n\n  .sidebar .weather-icon {\n    width: 120px;\n    align-self: center;\n  }\n  .row1 {\n    box-sizing: border-box;\n    margin-top: 0;\n  }\n  #city-img {\n    display: block;\n    margin: auto;\n    width: 300px;\n  }\n  .row1 {\n    overflow-x: scroll;\n  }\n\n  .row3 {\n    padding-bottom: 0;\n  }\n  .row2,\n  .row3,\n  .row2 .card-container {\n    gap: 2em;\n    height: auto;\n    display: flex;\n    flex-direction: column;\n  }\n}\n',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"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",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@600&display=swap");\n\n:root {\n  --bg-gray: #fafafa;\n  --time-gray: #8a8a8a;\n  --card-large-font-size: 60px;\n}\n\n* {\n  box-sizing: border-box !important;\n  /* outline: 1px solid red; */\n}\n\nbody {\n  overflow: scroll;\n  display: grid;\n  height: 100vh;\n  width: 100vw;\n\n  padding: 0em 1em 0 0;\n\n  font-family: "Source Sans Pro", sans-serif;\n  grid-template-columns: 1fr 4fr;\n  grid-template-rows: 1fr 1.5fr 1.5fr;\n  grid-template-areas: "s a" "s b" "s c";\n  background-color: var(--bg-gray);\n  /* background-color: red; */\n  gap: 1em;\n}\n\n.hide {\n  visibility: hidden;\n}\n\n.sidebar {\n  grid-area: s;\n  background-color: white;\n  /* margin-right: 1em; */\n}\n\n.sidebar > div {\n  display: flex;\n  flex-direction: column;\n  gap: 1em;\n  padding: 20px;\n  position: sticky;\n  top: 0;\n}\n\n.sidebar .weather-icon {\n  flex: 1;\n}\n\n#uv-card {\n  gap: 1em;\n}\n\n.card {\n  display: flex;\n  flex-direction: column;\n  color: var(--time-gray);\n  font-size: 20px;\n  padding: 15px;\n  background-color: white;\n}\n\n.temperature {\n  display: flex;\n}\n.sidebar .number,\n.row2 .number,\n.row3 .number {\n  font-size: var(--card-large-font-size);\n}\n.sidebar .symbol,\n.row2 .symbol,\n.row3 .symbol {\n  font-size: 40px;\n}\n\n.card .number {\n  color: black;\n}\n.card .symbol {\n  color: var(--time-gray);\n}\n.date {\n  font-size: 20px;\n}\n.date .day {\n  font-weight: 600;\n}\n.date .time {\n  color: var(--time-gray);\n}\n\n.search-bar {\n  display: flex;\n  height: 30px;\n  background-color: var(--bg-gray);\n  border-radius: 16px;\n  padding: 10px;\n  gap: 1em;\n  align-items: center;\n}\n.search-bar input {\n  flex: 1;\n  font-size: 14px;\n}\n\n/* row 1 start */\n.row1 {\n  margin-top: 1em;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 2em;\n  grid-area: a;\n  background-color: blue;\n}\n.row1 .card {\n  max-height: 200px;\n  gap: 1em;\n}\n\n.row1 .stats {\n  gap: 0.1em;\n}\n.row1 .card-title {\n  text-align: center;\n  font-weight: 600;\n  color: black;\n}\n\n.row1 img {\n  width: 100%;\n  margin-right: auto;\n}\n.row1 .stats {\n  display: flex;\n  justify-content: center;\n}\n/* row 1 end */\n\n/* row 2 start */\n.row2 {\n  display: flex;\n  flex-direction: column;\n  gap: 2em;\n  grid-area: b;\n}\n\n.row2 h2 {\n  font-size: 30px;\n  font-weight: 600;\n}\n\n.row2 .card-container {\n  display: grid;\n  gap: 2em;\n  grid-template-columns: repeat(3, 1fr);\n\n  width: 100%;\n  height: 100%;\n}\n/* row 2 end */\n\n/* row 3 start */\n.row3 {\n  margin-bottom: 1em;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 2em;\n  grid-area: c;\n  background-color: yellow;\n}\n\n.row3 .stats-container {\n  flex: 1;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n/* row 3 end */\n.row1 .card-title,\n.row2 .card-title,\n.row3 .card-title {\n  font-size: 16px;\n}\n.row1,\n.row2,\n.row3 {\n  background-color: transparent;\n}\n\n.country-info {\n  position: relative;\n}\n\n.country-title {\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  color: white;\n  position: absolute;\n  z-index: 99;\n  top: 10px;\n}\n\n.country-title div {\n  display: flex;\n  gap: 0.5em;\n}\n\n.country-img {\n  border-radius: 10px;\n}\n\n.card .stats {\n  display: flex;\n  align-items: center;\n  gap: 0.5em;\n}\n\n#sun-card {\n  gap: 1.5em;\n}\n#sun-card .time {\n  font-size: 25px;\n  color: black;\n}\n#sun-card .container {\n  display: flex;\n  align-items: center;\n  gap: 1em;\n}\n\n#visibility-card .stats-container {\n  display: flex;\n  flex: 1;\n  justify-content: center;\n}\n\n#wind-card .stats-container {\n  height: 100%;\n  display: grid;\n  place-items: center;\n}\n\n.status {\n  font-weight: 500;\n  font-size: 16px;\n}\n.status.good::after {\n  content: " Good";\n  color: var(--progress-bar1-col);\n}\n.status.average::after {\n  content: " Average";\n  color: var(--progress-bar2-col);\n}\n.status.bad::after {\n  content: " Bad";\n  color: var(--progress-bar3-col);\n}\n\n@media screen and (max-width: 600px) {\n  :root {\n    --card-large-font-size: 50px;\n  }\n  body {\n    display: flex;\n    flex-direction: column;\n    height: auto;\n    padding: 0;\n    gap: 2em;\n    padding: 5px;\n  }\n\n  .row1,\n  .row2,\n  .row3 {\n    margin-right: 0;\n  }\n\n  #wind-card {\n    width: 100%;\n  }\n  .card {\n    box-sizing: border-box;\n    min-width: none;\n  }\n  .search-bar {\n    padding: 0;\n    border-radius: 12px;\n  }\n\n  .sidebar > div {\n    gap: 1em;\n    padding: 0;\n    position: relative;\n  }\n\n  .sidebar .weather-icon {\n    width: 120px;\n    align-self: center;\n  }\n  .row1 {\n    box-sizing: border-box;\n    margin-top: 0;\n  }\n  #city-img {\n    display: block;\n    margin: auto;\n    width: 300px;\n  }\n  .row1 {\n    overflow-x: scroll;\n  }\n\n  .row3 {\n    padding-bottom: 0;\n  }\n  .row2,\n  .row3,\n  .row2 .card-container {\n    gap: 2em;\n    height: auto;\n    display: flex;\n    flex-direction: column;\n  }\n}\n'],sourceRoot:""}]);const i=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(t)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(A[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);t&&A[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),r&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=r):c[2]=r),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),A=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(A).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},A=[],i=0;i<n.length;i++){var s=n[i],d=t.base?s[0]+t.base:s[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var p=r(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var C=o(u,t);t.byIndex=i,e.splice(i,0,{identifier:l,updater:C,references:1})}A.push(l)}return A}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<a.length;A++){var i=r(a[A]);e[i].references--}for(var s=t(n,o),d=0;d<a.length;d++){var c=r(a[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.nc=void 0,(()=>{var n=r(379),e=r.n(n),t=r(795),o=r.n(t),a=r(569),A=r.n(a),i=r(565),s=r.n(i),d=r(216),c=r.n(d),l=r(589),p=r.n(l),u=r(434),C={};C.styleTagTransform=p(),C.setAttributes=s(),C.insert=A().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=c(),e()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;var m=r(772),g={};g.styleTagTransform=p(),g.setAttributes=s(),g.insert=A().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=c(),e()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;var f=r(479),E={};E.styleTagTransform=p(),E.setAttributes=s(),E.insert=A().bind(null,"head"),E.domAPI=o(),E.insertStyleElement=c(),e()(f.Z,E),f.Z&&f.Z.locals&&f.Z.locals;var b=r(66),B={};B.styleTagTransform=p(),B.setAttributes=s(),B.insert=A().bind(null,"head"),B.domAPI=o(),B.insertStyleElement=c(),e()(b.Z,B),b.Z&&b.Z.locals&&b.Z.locals;var h=r(184),y={};y.styleTagTransform=p(),y.setAttributes=s(),y.insert=A().bind(null,"head"),y.domAPI=o(),y.insertStyleElement=c(),e()(h.Z,y),h.Z&&h.Z.locals&&h.Z.locals;const w=r.p+"images/ef7ef710e6e5017858da.svg",x=r.p+"images/922567abdfa320cd02a3.svg",v=r.p+"images/92d073823a8e747fb256.svg",k=r.p+"images/c3d57ae8c3061d50b93b.svg",I=r.p+"images/37abf5c8244f84960bdb.svg",z=r.p+"images/1a22fdade13319a80347.svg",S=(()=>{const n=document.querySelector(".sidebar"),e=document.querySelector("#search-input");let r=null;function t(n){return n>=200&&n<300?I:n>=300&&n<600?x:n>=600&&n<700?w:n>=700&&n<800||800===n?z:801===n?v:n>=802&&n<900?k:null}function o(n,e){const r=parseInt(n,10)+parseInt(e,10);return new Date(1e3*r).toUTCString()}function a(n){return`${n.slice(17,19)}:${n.slice(20,22)}`}function A(n,e,r,t,o,a){n.classList.remove("bad"),n.classList.remove("good"),n.classList.remove("average"),r[0]<=e&&e<=r[1]&&n.classList.add("bad"),t[0]<=e&&e<=t[1]&&n.classList.add("average"),o[0]<=e&&e<=o[1]&&n.classList.add("good"),a&&function(){const e=a.querySelectorAll("input");e.forEach((n=>n.removeAttribute("checked"))),n.classList.contains("bad")?e[2].setAttribute("checked","checked"):n.classList.contains("average")?e[1].setAttribute("checked","checked"):n.classList.contains("good")&&e[0].setAttribute("checked","checked")}()}return e.addEventListener("keyup",(()=>{clearTimeout(r),r=setTimeout(j.updateContent,1e3)})),{getSearchBarValue:function(){return e.value},setCityImage:function(n){document.getElementById("city-img").src=n},setCurrentWeatherImage:function(e){const r=n.querySelector(".weather-icon"),o=t(e);o&&(r.src=o)},toggleLoadingAnimation:function(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const r=n.querySelector(".loader");e?r.classList.remove("hide"):r.classList.add("hide")},setCityImageCaption:function(n){document.getElementById("city-name").textContent=n},setMainTemperature:function(e){n.querySelector(".temperature .number").textContent=parseInt(e,10)},setDate:function(e,r){const t=o(e,r),A=a(t),i=t.slice(0,3),s=(d=i,["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"].filter((n=>n.slice(0,3)===d))[0]);var d;n.querySelector(".date .day").textContent=`${s}, `,n.querySelector(".date .time").textContent=A},setVisibility:function(n){document.querySelector("#visibility-card .number").textContent=n,A(document.querySelector("#visibility-card .status"),n,[0,3e3],[3e3,7e3],[7e3,1e4])},setAirQuality:function(n){document.querySelector("#air-card .number").textContent=n,A(document.querySelector("#air-card .status"),n,[4,5],[3,3],[1,2],document.querySelector("#air-card .progress-bar"))},setHumidity:function(n){document.querySelector("#humidity-card .number").textContent=n;const e=document.querySelector("#humidity-card .status"),r=document.querySelector("#humidity-card .progress-bar");n<50?A(e,n,[0,24],[25,30],[31,60],r):A(e,n,[71,100],[61,70],[30,60],r)},setWindSpeed:function(n){document.querySelector("#wind-card .number").textContent=n},setSunrise:function(n,e){document.querySelector("#sunrise-time").textContent=a(o(n,e))},setSunset:function(n,e){document.querySelector("#sunset-time").textContent=a(o(n,e))},setPressure:function(n){const e=parseInt(n,10)-860,r=parseInt(180*e/740,10),t=document.querySelector(".speedometer .scorer-1-tick");t.style.removeProperty("transform"),document.documentElement.style.setProperty("--speedometer-rotation-angle",`${r}deg`),t.classList.add("play-speedometer-animation"),t.addEventListener("animationend",(()=>{t.classList.remove("play-speedometer-animation"),t.style.transform=`rotate(${r}deg)`}),{once:!0}),document.querySelector("#speedometer-value .number").textContent=n},setForecastData:function(n,e){const r=document.querySelectorAll(".row1 .card");for(let a=1;a<n.length;a+=1){const A=r[a-1],i=n[a],s=o(i.dt,e).slice(0,3);A.querySelector(".card-title").textContent=s;const d=parseInt(i.temp.day,10);A.querySelector(".stats .number").textContent=d;const c=t(parseInt(i.weather[0].id,10));A.querySelector(".weather-icon").src=c}},init:function(){e.value="Mexico City",j.updateContent(),e.value=""},toggleRedLoader:function(){let n=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const e=document.querySelector(".loader");n?e.classList.remove("invalid-loader"):e.classList.add("invalid-loader")}}})(),q=(()=>{const n="0ca9d53d2b652c10a5a8656ff1807c73";async function e(n){let e=null,r=null;try{for(var t=arguments.length,o=new Array(t>1?t-1:0),a=1;a<t;a++)o[a-1]=arguments[a];e=await n(...o)}catch(n){r=n}return[e,r]}return{getCityImageURL:async function(n){const r=`https://source.unsplash.com/random/200x300/?${n}-landscape`,[t,o]=await e(fetch,r);if(o)throw new Error(`Cannot fetch image ${n}`,o);if(200!==t.status)throw new Error("Invalid status code",t);return"https://images.unsplash.com/source-404?fit=crop&fm=jpg&h=800&q=60&w=1200"===t.url?"https://images.unsplash.com/photo-1505521377774-103a8cc2f735?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=300&ixid=MnwxfDB8MXxyYW5kb218MHx8bGFuZHNjYXBlfHx8fHx8MTY2NzYzNTI3MA&ixlib=rb-4.0.3&q=80&utm_campaign=api-credit&utm_medium=referral&utm_source=unsplash_source&w=200":t.url},getGeoData:async function(r){const t=`http://api.openweathermap.org/geo/1.0/direct?q=${r}&appid=${n}`,[o,a]=await e(fetch,t);if(a)throw new Error(`Cannot fetch geo data of ${r}`,a);if(200!==o.status)throw new Error("Invalid status code",o);const A=await o.json();if(0===A.length)throw new Error("Invalid city name",A);return A},getCurrentWeatherData:async function(r){const t=`http://api.openweathermap.org/data/2.5/weather?q=${r}&APPID=${n}&units=metric`,[o,a]=await e(fetch,t);if(a)throw new Error(`Cannot fetch current weather data of ${r}`,a);if(200!==o.status)throw new Error("Invalid status code",o);return await o.json()},getPollutionData:async function(r,t){const o=`http://api.openweathermap.org/data/2.5/air_pollution?lat=${r}&lon=${t}&appid=${n}`,[a,A]=await e(fetch,o);if(A)throw new Error(`Cannot fetch pollution data of (${r}, ${t})`,A);if(200!==a.status)throw new Error(`Invalid status code coordinates(${r}, ${t})`,a);return await a.json()},getDailyForecastData:async function(n,r){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const o=`https://api.openweathermap.org/data/2.5/onecall?lat=${n}&lon=${r}&exclude=current,minutely,hourly,alerts&appid=20f7632ffc2c022654e4093c6947b4f4&units=metric`,[a,A]=await e(fetch,o);if(A)throw new Error(`Cannot fetch forecast data of ${t}`,A);if(200!==a.status)throw new Error("Invalid status code",a);const i=await a.json();return i}}})(),j={updateContent:async function(){const n=S.getSearchBarValue();if(""===n)return;S.toggleRedLoader(),S.toggleLoadingAnimation();const e=await q.getGeoData(n).catch((n=>{S.toggleRedLoader(!1),console.log(n)})),r=e[0].name,t=e[0].country,[o=null,a=null,A=null,i=null]=await Promise.all([q.getCurrentWeatherData(r),q.getPollutionData(e[0].lat,e[0].lon),q.getDailyForecastData(e[0].lat,e[0].lon,r),q.getCityImageURL(r)]).catch((n=>{S.toggleRedLoader(!1),console.log(n)}));S.toggleLoadingAnimation(!1),S.setCityImage(i),S.setCityImageCaption(`${r}, ${t}`),S.setCurrentWeatherImage(o.weather[0].id),S.setMainTemperature(o.main.temp),S.setVisibility(o.visibility),S.setAirQuality(a.list[0].main.aqi),S.setWindSpeed(o.wind.speed),S.setHumidity(o.main.humidity),S.setPressure(o.main.pressure),S.setDate(o.dt,o.timezone),S.setSunrise(o.sys.sunrise,o.timezone),S.setSunset(o.sys.sunset,o.timezone),S.setForecastData(A.daily,A.timezone_offset)}};S.init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,